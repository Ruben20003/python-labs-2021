import pygame
import pygame.draw as draw

pygame.init()

ԿՎԸ = 30
էկրան = pygame.display.set_mode((800, 1000))
մակերևույթ = pygame.Surface((800, 1000), pygame.SRCALPHA)

էկրան.fill((102, 102, 102))

ժամացույց = pygame.time.Clock()
պրծած = False

def ՆկարելԱլֆաՈւղղանկյուն(մակերևույթ, գույն, rect, լայնություն=0):
    պատկերիՄակերևույթ = pygame.Surface(pygame.Rect(rect).size, pygame.SRCALPHA)
    draw.rect(պատկերիՄակերևույթ, գույն, պատկերիՄակերևույթ.get_rect(), լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, rect)

def ՆկարելԱլֆաՇրջանագիծ(մակերևույթ, գույն, կենտրոն, շառավիղ, լայնություն=0):
    էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ = pygame.Rect(կենտրոն, (0, 0)).inflate((շառավիղ * 2, շառավիղ * 2))
    պատկերիՄակերևույթ = pygame.Surface(էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ.size, pygame.SRCALPHA)
    draw.circle(պատկերիՄակերևույթ, գույն, (շառավիղ, շառավիղ), շառավիղ, լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ)

def ՆկարելԱլֆաԲազմանկյուն(մակերևույթ, գույն, points, լայնություն=0):
    ձx, ձy = zip(*points)
    նվազագույն_x, նվազագույն_y, մեծագույն_x, մեծագույն_y = min(ձx), min(ձy), max(ձx), max(ձy)
    էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ = pygame.Rect(նվազագույն_x, նվազագույն_y, մեծագույն_x - նվազագույն_x, մեծագույն_y - նվազագույն_y)
    պատկերիՄակերևույթ = pygame.Surface(էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ.size, pygame.SRCALPHA)
    draw.polygon(պատկերիՄակերևույթ, գույն, [(x - նվազագույն_x, y - նվազագույն_y) for x, y in points], լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ)

def ՆկարելԱլֆաԷլիպս(մակերևույթ, գույն, rect, լայնություն=0):
    պատկերիՄակերևույթ = pygame.Surface(pygame.Rect(rect).size, pygame.SRCALPHA)
    pygame.draw.ellipse(պատկերիՄակերևույթ, գույն, պատկերիՄակերևույթ.get_rect(), լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, rect)

def ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, գույն, կոորդինատեր, x0, y0, հոնվենցիայիԳործակից, լայնություն=0):
    x, y, լ, բ = կոորդինատեր
    x = x0 + x * հոնվենցիայիԳործակից
    y = y0 + y * հոնվենցիայիԳործակից
    լ *= հոնվենցիայիԳործակից
    բ *= հոնվենցիայիԳործակից

    ՆկարելԱլֆաՈւղղանկյուն(մակերևույթ, գույն, (x, y, լ, բ), լայնություն)

def ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, գույն, կոորդինատեր, x0, y0, հոնվենցիայիԳործակից, լայնություն=0, reversed=False):
    նորԿոորդինատներ = []
    if reversed:
        for կոորդինատ in կոորդինատեր:
            x, y = կոորդինատ
            x = x0 - x * հոնվենցիայիԳործակից
            y = y0 + y * հոնվենցիայիԳործակից
            նորԿոորդինատներ.append((x, y))
    else:
        for կոորդինատ in կոորդինատեր:
            x, y = կոորդինատ
            x = x0 + x * հոնվենցիայիԳործակից
            y = y0 + y * հոնվենցիայիԳործակից
            նորԿոորդինատներ.append((x, y))
    ՆկարելԱլֆաԲազմանկյուն(մակերևույթ, գույն, նորԿոորդինատներ, լայնություն)

def ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, գույն, կենտրոն, շառավիղ, x0, y0, հոնվենցիայիԳործակից, լայնություն=0, reversed=False):
    x, y = կենտրոն
    x = x0 + (x * հոնվենցիայիԳործակից) * (1 - 2 * reversed)
    y = y0 + y * հոնվենցիայիԳործակից
    ՆկարելԱլֆաՇրջանագիծ(մակերևույթ, գույն, (x, y), շառավիղ * հոնվենցիայիԳործակից, լայնություն)

def ՆկարելՏուն(մակերևույթ, x0=0, y0=0, հոնվենցիայիԳործակից=1, այբ=255):
    շագանակագույնՇինություն = (43, 34, 0, այբ)
    շագանակագույնՊատուհան = (43, 17, 0, այբ)
    դեղինՊատուհան = (212, 170, 0, այբ)
    մարմնագույնՊատուհան = (72, 62, 55, այբ)
    սևԱռաստաղ = (0, 0, 0, այբ)
    մոխրագույնՑանկապատ = (26, 26, 26, 255)


    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՇինություն, (40, 150, 410, 570), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՊատուհան, (85, 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՊատուհան, (205 , 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, դեղինՊատուհան, (325, 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)

    for i in range(4):
        ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մարմնագույնՊատուհան, (70 + 105 * i, 150, 40, 210), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, սևԱռաստաղ, [(0, 150), (60, 100), (430, 100), (490, 150)], x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (0, 370, 490, 60), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (10, 320, 10, 50), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (470, 320, 10, 50), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (20, 300, 450, 20), x0, y0, հոնվենցիայիԳործակից)


    for i in range(5):
        ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (60 + i * 87, 320, 20, 50), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (100, 50, 10, 75), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (120, 0 , 30, 130), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (290, 70, 10, 30), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (390, 45, 15, 85), x0, y0, հոնվենցիայիԳործակից)

def ՆկարելՀոգի(մակերևույթ, x0=0, y0=0, հոնվենցիայիԳործակից=1, այբ=255, reversed=False):
        մոխրագույնՈգի = (179, 179, 179, այբ)
        կապուտաչյաՈգի = (135, 205, 222, այբ)
        սևաչյաՈգի = (0, 0, 0, այբ)
        սպիտակՈգի = (255, 255, 255, այբ)

        ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՈգի, ghost_body_coords, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
        ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, (200, 200, 200), ghost_body_coords, x0, y0, հոնվենցիայիԳործակից, reversed=reversed, լայնություն=1)

        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, կապուտաչյաՈգի, (71, 34), 10, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սպիտակՈգի, (71, 34), 5, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սևաչյաՈգի, (68, 35), 4, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)


        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, կապուտաչյաՈգի, (103, 26), 10, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սպիտակՈգի, (103, 26), 5, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
        ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սևաչյաՈգի, (100, 27), 4, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)

ghost_body_coords = [(37,104),(37,105),(36,106),(36,107),(35,108),(35,109),(34,110),(34,111),(33,112),(33,113),(32,114),(32,115),(31,116),(31,117),(30,118),(30,119),(29,120),(28,121),(27,122),(26,123),(26,124),(25,125),(24,126),(23,127),(23,128),(22,129),(21,130),(20,131),(19,132),(19,133),(18,134),(18,135),(18,136),(17,137),(17,138),(16,139),(16,140),(16,141),(15,142),(15,143),(15,144),(15,145),(14,146),(14,147),(14,148),(13,149),(13,150),(12,151),(12,152),(11,153),(11,154),(10,155),(9,156),(9,157),(8,158),(7,159),(7,160),(6,161),(5,162),(4,163),(3,164),(3,165),(2,166),(1,167),(1,168),(0,169),(0,170),(0,171),(0,172),(0,173),(0,174),(1,174),(2,174),(3,174),(4,174),(5,174),(6,174),(7,174),(9,173),(8,174),(10,173),(11,173),(12,173),(14,172),(13,173),(15,172),(16,172),(18,171),(17,172),(19,171),(21,170),(20,171),(22,170),(23,170),(24,170),(25,170),(26,170),(28,169),(27,170),(29,169),(30,169),(32,168),(31,169),(33,168),(34,168),(35,168),(36,168),(37,168),(38,169),(39,169),(40,169),(41,170),(42,170),(43,171),(44,171),(44,172),(45,172),(46,173),(47,173),(48,174),(49,175),(50,176),(51,176),(52,177),(53,177),(54,178),(55,178),(56,179),(57,179),(58,180),(59,180),(60,181),(61,181),(62,182),(63,183),(64,184),(65,185),(66,186),(67,187),(68,188),(69,189),(70,190),(71,191),(71,192),(72,193),(73,194),(73,195),(74,196),(75,197),(76,198),(76,199),(77,200),(78,201),(79,202),(80,203),(81,204),(82,205),(83,205),(84,205),(85,206),(86,206),(87,206),(88,206),(89,206),(90,206),(91,206),(92,206),(93,206),(94,206),(95,206),(96,205),(97,205),(98,205),(99,205),(100,204),(101,204),(102,203),(103,203),(104,202),(105,202),(106,201),(107,200),(108,199),(109,198),(110,197),(111,196),(112,195),(113,194),(114,193),(115,192),(116,191),(117,190),(118,189),(119,188),(120,187),(121,186),(122,185),(123,184),(124,183),(125,183),(126,182),(127,181),(128,181),(129,180),(130,180),(131,180),(132,179),(133,179),(134,179),(135,178),(136,178),(137,178),(138,177),(139,177),(140,177),(141,177),(142,177),(143,177),(144,178),(145,178),(146,178),(147,178),(148,178),(149,179),(150,179),(151,179),(152,179),(153,179),(154,179),(155,180),(156,180),(157,180),(158,180),(159,180),(160,180),(161,180),(162,180),(163,180),(164,180),(165,180),(166,180),(167,180),(168,180),(169,180),(170,180),(171,180),(172,180),(173,180),(174,180),(175,180),(176,180),(177,180),(178,180),(179,180),(179,179),(179,178),(180,177),(180,176),(181,175),(181,174),(182,173),(182,172),(183,171),(183,170),(184,169),(185,168),(185,167),(186,166),(186,165),(186,164),(187,163),(187,162),(187,161),(187,160),(187,159),(188,158),(188,157),(188,156),(188,155),(189,154),(189,153),(189,152),(190,151),(190,150),(191,149),(191,148),(192,147),(193,146),(193,145),(194,144),(195,143),(196,142),(197,141),(198,140),(199,140),(200,139),(201,139),(202,138),(203,138),(204,137),(205,137),(206,137),(207,137),(208,137),(209,137),(210,137),(211,137),(212,137),(213,137),(214,137),(215,136),(216,136),(217,136),(218,135),(219,135),(220,134),(221,134),(222,133),(223,132),(224,131),(224,130),(225,129),(225,128),(226,127),(226,126),(226,125),(226,124),(226,123),(226,122),(226,121),(226,120),(226,119),(226,118),(226,117),(226,116),(226,115),(226,114),(226,113),(226,112),(226,111),(226,110),(226,109),(226,108),(226,107),(225,106),(225,105),(225,104),(225,103),(224,102),(224,101),(224,100),(223,99),(223,98),(222,97),(222,96),(221,95),(220,94),(219,93),(218,92),(217,91),(216,90),(215,89),(214,88),(213,87),(212,86),(211,85),(210,84),(209,84),(208,83),(207,83),(206,82),(205,81),(204,80),(203,79),(202,79),(201,78),(200,77),(199,77),(198,76),(197,75),(196,74),(195,73),(194,72),(193,71),(192,70),(191,69),(190,69),(189,68),(188,67),(187,66),(186,65),(185,64),(184,63),(183,62),(182,61),(181,60),(180,59),(179,58),(178,57),(177,56),(176,55),(175,54),(174,53),(173,52),(172,52),(171,51),(170,50),(169,49),(168,49),(167,48),(166,47),(165,46),(164,45),(163,44),(162,43),(161,42),(160,41),(159,40),(158,40),(157,39),(156,38),(155,37),(154,36),(153,35),(152,34),(151,33),(150,33),(149,32),(148,31),(147,30),(146,30),(145,29),(144,28),(143,27),(142,26),(141,26),(140,25),(139,24),(138,24),(137,23),(136,23),(135,22),(134,22),(133,22),(132,21),(131,21),(130,21),(129,21),(128,20),(127,20),(126,20),(125,20),(124,20),(123,19),(122,18),(121,17),(121,16),(120,15),(119,14),(119,13),(118,12),(117,11),(116,10),(115,9),(114,8),(113,7),(112,7),(111,6),(110,5),(109,5),(108,4),(107,4),(106,3),(105,3),(104,2),(103,2),(102,2),(101,1),(100,1),(99,1),(98,1),(97,0),(96,0),(95,0),(94,0),(93,0),(92,0),(91,0),(90,0),(89,0),(88,0),(87,0),(86,0),(85,0),(84,0),(83,0),(82,1),(81,1),(80,1),(79,1),(78,2),(77,2),(76,3),(75,3),(74,3),(73,4),(72,4),(71,5),(70,6),(69,6),(68,7),(67,8),(66,9),(65,10),(64,11),(63,12),(62,13),(61,14),(60,15),(60,16),(59,17),(59,18),(58,19),(58,20),(57,21),(57,22),(56,23),(56,24),(56,25),(56,26),(55,27),(55,28),(55,29),(55,30),(55,31),(55,32),(55,33),(54,34),(55,36),(54,35),(55,37),(55,38),(55,39),(55,40),(55,41),(55,42),(56,44),(55,43),(56,45),(56,46),(57,47),(56,48),(56,49),(56,50),(56,51),(56,52),(55,53),(55,54),(55,55),(55,56),(55,57),(55,58),(54,59),(54,60),(54,61),(54,62),(54,63),(53,64),(53,65),(53,66),(53,67),(52,68),(52,69),(52,70),(52,71),(52,72),(51,73),(51,74),(51,75),(50,76),(50,77),(50,78),(49,79),(49,80),(48,81),(47,82),(47,83),(46,84),(46,85),(45,86),(44,87),(44,88),(43,89),(43,90),(42,91),(42,92),(41,93),(41,94),(40,95),(40,96),(40,97),(40,98),(39,99),(39,100),(38,101),(38,102),(38,103),]

def ՆկարելԱլֆաՈւղղանկյուն(մակերևույթ, գույն, rect, լայնություն=0):
    պատկերիՄակերևույթ = pygame.Surface(pygame.Rect(rect).size, pygame.SRCALPHA)
    draw.rect(պատկերիՄակերևույթ, գույն, պատկերիՄակերևույթ.get_rect(), լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, rect)

def ՆկարելԱլֆաՇրջանագիծ(մակերևույթ, գույն, կենտրոն, շառավիղ, լայնություն=0):
    էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ = pygame.Rect(կենտրոն, (0, 0)).inflate((շառավիղ * 2, շառավիղ * 2))
    պատկերիՄակերևույթ = pygame.Surface(էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ.size, pygame.SRCALPHA)
    draw.circle(պատկերիՄակերևույթ, գույն, (շառավիղ, շառավիղ), շառավիղ, լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ)

def ՆկարելԱլֆաԲազմանկյուն(մակերևույթ, գույն, points, լայնություն=0):
    ձx, ձy = zip(*points)
    նվազագույն_x, նվազագույն_y, մեծագույն_x, մեծագույն_y = min(ձx), min(ձy), max(ձx), max(ձy)
    էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ = pygame.Rect(նվազագույն_x, նվազագույն_y, մեծագույն_x - նվազագույն_x, մեծագույն_y - նվազագույն_y)
    պատկերիՄակերևույթ = pygame.Surface(էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ.size, pygame.SRCALPHA)
    draw.polygon(պատկերիՄակերևույթ, գույն, [(x - նվազագույն_x, y - նվազագույն_y) for x, y in points], լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, էնԻնչըՄենքԲացողՓակագիծԵսԲացողՓակագիծԷմիլըՓակողՓակագիծՈՒՌուբոնՓակողՓակագիծՈւզումԵնքՍտանալ)

def ՆկարելԱլֆաԷլիպս(մակերևույթ, գույն, rect, լայնություն=0):
    պատկերիՄակերևույթ = pygame.Surface(pygame.Rect(rect).size, pygame.SRCALPHA)
    pygame.draw.ellipse(պատկերիՄակերևույթ, գույն, պատկերիՄակերևույթ.get_rect(), լայնություն)
    մակերևույթ.blit(պատկերիՄակերևույթ, rect)

def ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, գույն, կոորդինատեր, x0, y0, հոնվենցիայիԳործակից, լայնություն=0):
    x, y, լ, բ = կոորդինատեր
    x = x0 + x * հոնվենցիայիԳործակից
    y = y0 + y * հոնվենցիայիԳործակից
    լ *= հոնվենցիայիԳործակից
    բ *= հոնվենցիայիԳործակից

    ՆկարելԱլֆաՈւղղանկյուն(մակերևույթ, գույն, (x, y, լ, բ), լայնություն)

def ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, գույն, կոորդինատեր, x0, y0, հոնվենցիայիԳործակից, լայնություն=0, reversed=False):
    նորԿոորդինատներ = []
    if reversed:
        for կոորդինատ in կոորդինատեր:
            x, y = կոորդինատ
            x = x0 - x * հոնվենցիայիԳործակից
            y = y0 + y * հոնվենցիայիԳործակից
            նորԿոորդինատներ.append((x, y))
    else:
        for կոորդինատ in կոորդինատեր:
            x, y = կոորդինատ
            x = x0 + x * հոնվենցիայիԳործակից
            y = y0 + y * հոնվենցիայիԳործակից
            նորԿոորդինատներ.append((x, y))
    ՆկարելԱլֆաԲազմանկյուն(մակերևույթ, գույն, նորԿոորդինատներ, լայնություն)

def ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, գույն, կենտրոն, շառավիղ, x0, y0, հոնվենցիայիԳործակից, լայնություն=0, reversed=False):
    x, y = կենտրոն
    x = x0 + (x * հոնվենցիայիԳործակից) * (1 - 2 * reversed)
    y = y0 + y * հոնվենցիայիԳործակից
    ՆկարելԱլֆաՇրջանագիծ(մակերևույթ, գույն, (x, y), շառավիղ * հոնվենցիայիԳործակից, լայնություն)

def ՆկարելՏուն(մակերևույթ, x0=0, y0=0, հոնվենցիայիԳործակից=1, այբ=255):
    շագանակագույնՇինություն = (43, 34, 0, այբ)
    շագանակագույնՊատուհան = (43, 17, 0, այբ)
    դեղինՊատուհան = (212, 170, 0, այբ)
    մարմնագույնՊատուհան = (72, 62, 55, այբ)
    սևԱռաստաղ = (0, 0, 0, այբ)
    մոխրագույնՑանկապատ = (26, 26, 26, 255)


    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՇինություն, (40, 150, 410, 570), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՊատուհան, (85, 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, շագանակագույնՊատուհան, (205 , 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, դեղինՊատուհան, (325, 550, 80, 100), x0, y0, հոնվենցիայիԳործակից)

    for i in range(4):
        ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մարմնագույնՊատուհան, (70 + 105 * i, 150, 40, 210), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, սևԱռաստաղ, [(0, 150), (60, 100), (430, 100), (490, 150)], x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (0, 370, 490, 60), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (10, 320, 10, 50), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (470, 320, 10, 50), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (20, 300, 450, 20), x0, y0, հոնվենցիայիԳործակից)


    for i in range(5):
        ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (60 + i * 87, 320, 20, 50), x0, y0, հոնվենցիայիԳործակից)

    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (100, 50, 10, 75), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (120, 0 , 30, 130), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (290, 70, 10, 30), x0, y0, հոնվենցիայիԳործակից)
    ՆկարելՈւղղանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՑանկապատ, (390, 45, 15, 85), x0, y0, հոնվենցիայիԳործակից)

def ՆկարելՀոգի(մակերևույթ, x0=0, y0=0, հոնվենցիայիԳործակից=1, այբ=255, reversed=False):
    մոխրագույնՈգի = (179, 179, 179, այբ)
    կապուտաչյաՈգի = (135, 205, 222, այբ)
    սևաչյաՈգի = (0, 0, 0, այբ)
    սպիտակՈգի = (255, 255, 255, այբ)

    ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, մոխրագույնՈգի, ghost_body_coords, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
    ՆկարելԲազմանկյանՀոնվենցիա(մակերևույթ, (200, 200, 200), ghost_body_coords, x0, y0, հոնվենցիայիԳործակից, reversed=reversed, լայնություն=1)

    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, կապուտաչյաՈգի, (71, 34), 10, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սպիտակՈգի, (71, 34), 5, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սևաչյաՈգի, (68, 35), 4, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)


    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, կապուտաչյաՈգի, (103, 26), 10, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սպիտակՈգի, (103, 26), 5, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)
    ՆկարելՇրջանագծիՀոնվենցիա(մակերևույթ, սևաչյաՈգի, (100, 27), 4, x0, y0, հոնվենցիայիԳործակից, reversed=reversed)

while not պրծած:
    draw.rect(էկրան, (0, 0, 0), (0, 471, 800, 529))

    draw.ellipse(էկրան, (255, 255, 255), (640, 20, 190, 190))
    draw.ellipse(էկրան, (77, 77, 77), (350, 50, 500, 80))
    draw.ellipse(էկրան, (51, 51, 51), (40, 90, 600, 70))
    draw.ellipse(էկրան, (77, 77, 77), (450, 150, 500, 80))
    draw.ellipse(էկրան, (26, 26, 26), (400, 240, 600, 80))

    ՆկարելՏուն(էկրան, x0=560, y0=210, հոնվենցիայիԳործակից=0.4, այբ=127)
    ՆկարելՏուն(էկրան, x0=260, y0=340, հոնվենցիայիԳործակից=0.4, այբ=255)

    ՆկարելԱլֆաԷլիպս(էկրան, (50, 50, 50, 127), (140, 420, 720, 80))
    ՆկարելԱլֆաԷլիպս(էկրան, (40, 40, 40, 127), (350, 510, 600, 50))
    ՆկարելԱլֆաԷլիպս(էկրան, (90, 90, 90, 127),(-100, 600, 500, 50))

    ՆկարելՏուն(էկրան, x0=0  , y0=450, հոնվենցիայիԳործակից=0.4, այբ=255)

    ՆկարելՀոգի(էկրան, x0=500, y0=700, հոնվենցիայիԳործակից=1.0, այբ=255)
    ՆկարելՀոգի(էկրան, x0=450, y0=730, հոնվենցիայիԳործակից=0.3, այբ=100)
    ՆկարելՀոգի(էկրան, x0=700, y0=500, հոնվենցիայիԳործակից=0.3, այբ=100)
    ՆկարելՀոգի(էկրան, x0=750, y0=550, հոնվենցիայիԳործակից=0.2, այբ=100)
    ՆկարելՀոգի(էկրան, x0=170, y0=800, հոնվենցիայիԳործակից=0.6, այբ=127, reversed=True)
    ՆկարելՀոգի(էկրան, x0=200, y0=850, հոնվենցիայիԳործակից=0.4, այբ=127, reversed=True)

    pygame.display.update()

    ժամացույց.tick(ԿՎԸ)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            պրծած = True

pygame.quit()
